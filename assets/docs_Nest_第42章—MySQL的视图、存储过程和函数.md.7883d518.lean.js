import{_ as s,v as a,b as n,R as p}from"./chunks/framework.eb2f4134.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Nest/第42章—MySQL的视图、存储过程和函数.md","filePath":"docs/Nest/第42章—MySQL的视图、存储过程和函数.md"}'),l={name:"docs/Nest/第42章—MySQL的视图、存储过程和函数.md"},o=p(`<p>和 mysql server 建立连接之后，可以看到它下面所有的 database。</p><p>每个 database 包含表、视图、存储过程、函数：</p><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-1.png" alt=""></p><p>表的增删改查我们已经学会了。</p><p>那视图、存储过程、函数都是什么呢？</p><p>我们分别来看下：</p><p>用之前的 customers、orders 表来建立视图：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">VIEW</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">customer_orders</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        c.name </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> customer_name, </span></span>
<span class="line"><span style="color:#A6ACCD;">        o.id </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> order_id, </span></span>
<span class="line"><span style="color:#A6ACCD;">        o.order_date, </span></span>
<span class="line"><span style="color:#A6ACCD;">        o.total_amount</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> customers c</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">JOIN</span><span style="color:#A6ACCD;"> orders o </span><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> c.id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> o.customer_id;</span></span></code></pre></div><p>下面的 select 语句我们很熟悉，就是关联 customers、orders 表，查出一些字段。</p><p>然后加上 CREATE VIEW ... AS 就是把这个查询的结果建立一个视图。</p><p>我们查询下刚创建的视图：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> customer_orders</span></span></code></pre></div><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-2.png" alt=""></p><p>视图有什么好处呢？</p><p>明显感受到的就是能简化查询，之前要写一堆 sql，现在只要查这个视图就好了。</p><p>再就是还可以控制权限，让开发者只能看到需要的字段，其余的给隐藏掉。</p><p>视图一般只用来做查询，因为它增删改的限制比较多，比如只有单表的视图可以增删改，并且要求不在视图里的字段都有默认值等。</p><p>了解即可。</p><p>再就是存储过程。</p><p>这段 sql 就是创建了一个存储过程，传入 custom_id 查询出所有关联的订单：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">DELIMITER $$</span></span>
<span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">PROCEDURE</span><span style="color:#A6ACCD;"> get_customer_orders(</span><span style="color:#F78C6C;">IN</span><span style="color:#A6ACCD;"> customer_id </span><span style="color:#C792EA;">INT</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#F78C6C;">BEGIN</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> o.id </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> order_id, o.order_date, o.total_amount</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> orders o</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> o.customer_id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> customer_id;</span></span>
<span class="line"><span style="color:#F78C6C;">END</span><span style="color:#A6ACCD;"> $$</span></span>
<span class="line"><span style="color:#A6ACCD;">DELIMITER ;</span></span></code></pre></div><p>首先 DELIMITER $$ 定义分隔符为 $$，因为默认是 ;</p><p>这样中间就可以写 ; 了，不会中止存储过程的 sql。</p><p>最后再恢复为之前的分隔符：DELIMITER ;</p><p>存储过程内部执行了一个查询，用到的 customer_id 是参数传入的。</p><p>创建这个存储过程：</p><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-3.png" alt=""></p><p>刷新就可以看到这个刚创建的存储过程：</p><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-4.png" alt=""></p><p>点击第二个图标就可以传参数调用：</p><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-5.png" alt=""></p><p>当然你可以在 sql 里调用：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CALL</span><span style="color:#A6ACCD;"> get_customer_orders(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>调用使用 CALL 存储过程(参数) 的形式：</p><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-6.png" alt=""></p><p>可以看到，存储过程可以封装一些 sql，用的时候传入参数 CALL 一下就行。</p><p>此外，如果你想调用的时候返回值，可以使用函数：</p><p>比如一个求平方的函数：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">DELIMITER $$</span></span>
<span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FUNCTION</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">square</span><span style="color:#A6ACCD;">(x </span><span style="color:#C792EA;">INT</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#F78C6C;">RETURNS</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">INT</span></span>
<span class="line"><span style="color:#F78C6C;">BEGIN</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">DECLARE</span><span style="color:#A6ACCD;"> result </span><span style="color:#C792EA;">INT</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">SET</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> x;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">RETURN</span><span style="color:#A6ACCD;"> result;</span></span>
<span class="line"><span style="color:#F78C6C;">END</span><span style="color:#A6ACCD;"> $$</span></span>
<span class="line"><span style="color:#A6ACCD;">DELIMITER ;</span></span></code></pre></div><p>还是先通过 DELIMITER 指定分隔符为 $$。</p><p>CREATE FUNCTION 声明函数的名字和参数 x，并且通过 RETURNS 声明返回值类型。</p><p>BEGIN、END 中间的是函数体。</p><p>先 DECLARE 一个 INT 类型的变量，然后 SET 它的值为 x * x，之后通过 RETURN 返回这个结果。</p><p>但默认 mysql 是不允许创建函数的。</p><p>需要先设置下这个变量：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SET</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">GLOBAL</span><span style="color:#A6ACCD;"> log_bin_trust_function_creators </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">;</span></span></code></pre></div><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-7.png" alt=""></p><p>之后之后再创建 function：</p><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-8.png" alt=""></p><p>创建成功之后就可以在 sql 里用它了：</p><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-9.png" alt=""></p><p>比如查询刚才的视图：</p><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-10.png" alt=""></p><p>就可以用上这个函数：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> product_name, </span><span style="color:#82AAFF;">square</span><span style="color:#A6ACCD;">(price) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> order_items_view</span></span></code></pre></div><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-11.png" alt=""></p><p>你也可以可视化的调用这个 function：</p><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-12.png" alt=""></p><p>当然，这个函数没啥意义，我们再创建个有意义一点的：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">DELIMITER $$</span></span>
<span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FUNCTION</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_order_total</span><span style="color:#A6ACCD;">(order_id </span><span style="color:#C792EA;">INT</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#F78C6C;">RETURNS</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DECIMAL</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">,</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#F78C6C;">BEGIN</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">DECLARE</span><span style="color:#A6ACCD;"> total </span><span style="color:#C792EA;">DECIMAL</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">,</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SUM</span><span style="color:#A6ACCD;">(quantity </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> price) </span><span style="color:#F78C6C;">INTO</span><span style="color:#A6ACCD;"> total</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> order_items</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> order_id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> order_items.order_id;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">RETURN</span><span style="color:#A6ACCD;"> total;</span></span>
<span class="line"><span style="color:#F78C6C;">END</span><span style="color:#A6ACCD;"> $$</span></span>
<span class="line"><span style="color:#A6ACCD;">DELIMITER ;</span></span></code></pre></div><p>创建一个函数 get_order_total，参数为 INT 类型的 order_id，返回值为 DECIMAL(10, 2) 类型。</p><p>声明 total 变量，执行查询订单详情表综合的 select 语句，把结果放到 total 变量里，也就是 SELECT INTO。</p><p>最后 RETURN 这个 total 变量。</p><p>然后我们调用下：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> id, get_order_total(id) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> orders;</span></span></code></pre></div><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-13.png" alt=""></p><p>我们自己来算算对不对：</p><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-14.png" alt=""></p><p>id 为 3 的订单的总额是对的：</p><p><img src="//liushuaiyang.oss-cn-shanghai.aliyuncs.com/nest-docs/image/第42章-15.png" alt=""></p><p>这就是自定义函数。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>这节我们了解了下视图、存储过程、函数。</p><p>视图就是把查询结果保存下来，可以对这个视图做查询，简化了查询语句并且也能隐藏一些字段。</p><p>它增删改的限制比较多，一般只是来做查询。</p><p>存储过程就是把一段 sql 封装起来，传参数调用。</p><p>函数也是把一段 sql 或者其他逻辑封装起来，传参数调用，但是它还有返回值。</p><p>这些概念了解即可，实际上用的并不多。</p>`,78),e=[o];function c(t,C,r,i,A,y){return a(),n("div",null,e)}const g=s(l,[["render",c]]);export{d as __pageData,g as default};
